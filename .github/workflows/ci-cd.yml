name: PWA CI/CD Workflow

on:
  push:
    branches:
      - development
      - feature/*
      - main
      - release/*
  pull_request:
    branches:
      - development
      - main
      - release/*
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: '16'
          
      - name: Restore npm cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm install

      - name: Set environment variables
        run: |
          echo "API_KEY=${{ secrets.API_KEY }}" >> $GITHUB_ENV
          echo "STAGING_TOKEN=${{ secrets.STAGING_TOKEN }}" >> $GITHUB_ENV

      - name: Build Project
        run: npm run build

      - name: Run Unit Tests with Coverage
        run: npm test -- --coverage --passWithNoTests

      - name: Install Cypress
        run: npm install cypress --save-dev

      - name: Run E2E Tests with Cypress
        run: npx cypress run

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-output
          path: ./build

      # Notificación a Slack en caso de éxito
      - name: Notify Slack of Successful Build
        if: success()
        uses: 8398a7/action-slack@v3
        with:
          status: success
          fields: repo,commit,author
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_USERNAME: 'CI/CD Bot'

      # Notificación a Slack en caso de fallo
      - name: Notify Slack of Failed Build
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          fields: repo,commit,author
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_USERNAME: 'CI/CD Bot'

  deploy:
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release/')
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install Dependencies
        run: npm install

      - name: Deploy to Production
        run: |
          echo "Deploying application..."
